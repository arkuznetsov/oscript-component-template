Перем юТест;
Перем ТекущийКаталог;

////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьСумму");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуПеречисления");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоОбъектКоллекция");

	ПередЗапускомТестов();

	Возврат ВсеТесты;
	
КонецФункции

Процедура ПередЗапускомТестов()

	ТекущийКаталог = ПолучитьПеременнуюСреды("OSC_TEST_CWD");
	Если НЕ ЗначениеЗаполнено(ТекущийКаталог) Тогда
		ТекущийКаталог = ТекущийСценарий().Каталог;
	КонецЕсли;

	ПутьККомпоненте = ПолучитьПеременнуюСреды("OSC_TEST_LIB");
	Если НЕ ЗначениеЗаполнено(ПутьККомпоненте) Тогда
		ПутьККомпоненте = ОбъединитьПути(ТекущийКаталог, "src", "oscript-component", "bin");
		ПутьККомпоненте = ОбъединитьПути(ПутьККомпоненте, "Debug", "net452", "oscript-component.dll");
	КонецЕсли;

	Попытка
		ПодключитьВнешнююКомпоненту(ПутьККомпоненте);
		Сообщить("Компонента подключена.");
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщить(СтрШаблон("Ошибка подключения компоненты:%1%2", Символы.ПС, ТекстОшибки));
	КонецПопытки;

КонецПроцедуры // ПередЗапускомТестов()

Процедура ТестДолжен_ПроверитьСумму() Экспорт

	Слагаемое1 = Новый ЭлементВычисления(5);
	Слагаемое2 = Новый ЭлементВычисления(Слагаемое1);

	Складыватель = Новый Вычисление;
	Складыватель.ДобавитьЭлемент(Слагаемое1);
	Складыватель.ДобавитьЭлемент(Слагаемое2);

	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 10, "Неправильно работает сложение двух элементов!");

	Складыватель.ДобавитьЭлемент(-3);
	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 7, "Неправильно работает сложение трёх элементов!");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоОбъектКоллекция() Экспорт

	Слагаемое1 = Новый ЭлементВычисления(5);
	Слагаемое2 = Новый ЭлементВычисления(Слагаемое1);

	Складыватель = Новый Вычисление;
	Складыватель.ДобавитьЭлемент(Слагаемое1);
	Складыватель.ДобавитьЭлемент(Слагаемое2);

	Для Каждого мСлагаемое Из Складыватель Цикл

		// В случае, если Addition не воплощает ICollectionContext,
		// этот цикл упадёт с ошибкой времени выполнения
		// и тест не будет пройден

	КонецЦикла;

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуПеречисления() Экспорт

	Слагаемое1 = Новый ЭлементВычисления(5);
	Слагаемое2 = Новый ЭлементВычисления(Слагаемое1);

	Складыватель = Новый Вычисление;
	Складыватель.ДобавитьЭлемент(Слагаемое1);
	Складыватель.ДобавитьЭлемент(Слагаемое2);

	СтарыйВидОперации = Складыватель.ВидОперации;
	Складыватель.ВидОперации = ВидыОперации.Умножение;

	юТест.ПроверитьРавенство(Складыватель.Вычислить(), 25, "Неправильно работает перечисление!");

КонецПроцедуры
